{"version":3,"sources":["index.js","logo.svg","Main.elm"],"names":["__webpack_require__","Elm","root","document","emptyStats","octaves","map","o","octave","notes","n","note","correct","incorrect","app","Main","init","node","stats","JSON","window","answer","console","index","i","length","noteIndex","module","exports","p","scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","F6","F7","g","F8","h","F9","A2","A3","A4","A5","A6","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_Utils_Tuple2","_JsArray_foldr","array","value","acc","_List_Nil","from","to","slice","dest","source","destLen","itemsToCopy","$","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","_List_toArray","xs","push","_List_map2","ys","zs","ws","vs","sort","_Utils_cmp","ord","elm$core$Basics$EQ","elm$core$Basics$LT","tag","log","_Debug_crash","identifier","Error","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","key","elm$core$Dict$toList","_Utils_compare","elm$core$Basics$GT","_Utils_Tuple0","_Utils_Tuple3","_Utils_chr","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","curr","_String_cons","chr","str","string","len","word","charCodeAt","join","isGood","char","state","_String_split","sep","split","_String_join","strs","_String_slice","start","end","_String_all","_String_contains","sub","indexOf","_String_indexes","lastIndexOf","subLen","is","_String_fromNumber","number","_Basics_add","_Basics_sub","_Basics_modBy","Math","pow","modulus","PI","E","cos","sin","tan","acos","asin","atan","atan2","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_round","round","_Basics_log","sqrt","isNaN","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","interval","id","setInterval","clearInterval","_Json_decodeField","field","decoder","_Json_mapMany","decoders","_Json_map1","d1","_Json_map2","d2","_Json_map3","d3","_Json_run","d4","d5","d6","d7","d8","_Json_runHelp","parse","elm$core$Result$Err","elm$json$Json$Decode$Failure","message","_Json_wrap","_Json_unwrap","elm$core$Result$Ok","_Json_expecting","isFinite","String","isArray","_Json_runArrayDecoder","_Json_toElmArray","elm$core$Result$isOk","elm$json$Json$Decode$Field","elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","elm$core$List$reverse","errors","temp","elm$json$Json$Decode$OneOf","toElmValue","elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Json_encode","indentLevel","stringify","_Json_addField","object","impl","flagDecoder","debugMetadata","args","_Platform_initialize","az","aP","aM","update","subscriptions","stepperBuilder","undefined","managers","model","stepper","sendToApp","ports","_Platform_effectManagers","manager","_Platform_instantiateManager","_Platform_setupEffects","viewMetadata","_Platform_dispatchEffects","_Platform_createManager","onEffects","onSelfMsg","cmdMap","subMap","info","router","loop","j","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_batch","list","m","tagger","bag","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","taggers","effect","q","_Platform_toEffect","newEffect","effects","_Platform_insert","_Platform_checkPortName","name","_Platform_outgoingPortMap","_Platform_setupOutgoingPort","time","subs","converter","r","setTimeout","clearTimeout","cmdList","currentSubs","subscribe","unsubscribe","splice","_VirtualDom_divertHrefToApp","_Platform_incomingPortMap","finalTagger","_Platform_setupIncomingPort","subList","send","incomingValue","_VirtualDom_doc","_VirtualDom_appendChild","parent","child","appendChild","virtualNode","parentNode","replaceChild","_VirtualDom_render","_VirtualDom_text","_VirtualDom_nodeNS","namespace","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_thunk","refs","thunk","A7","A8","_VirtualDom_on","handler","_VirtualDom_style","_VirtualDom_property","_VirtualDom_attribute","attr","elm$virtual_dom$VirtualDom$toHandlerInt","elm$json$Json$Decode$map2","_VirtualDom_mapEventTuple","_VirtualDom_mapEventRecord","elm$json$Json$Decode$succeed","elm$json$Json$Decode$map","_VirtualDom_mapHandler","_VirtualDom_passiveSupported","tuple","record","N","L","facts","entry","subFacts","_VirtualDom_addClass","newClass","classes","vNode","eventNode","createTextNode","subNode","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","Object","defineProperty","get","initialHandler","event","stopPropagation","currentEventNode","preventDefault","_VirtualDom_equalEvents","_VirtualDom_diff","patches","_VirtualDom_diffHelp","_VirtualDom_pushPatch","data","patch","s","t","u","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","xNext","yNext","xNextKey","xNextNode","oldMatch","yNextKey","yNextNode","newMatch","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","z","A","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","insert","_VirtualDom_applyPatchReorderEndInsertsHelp","_VirtualDom_applyPatchReorder","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","tagName","toLowerCase","_Browser_element","initialModel","view","aR","currNode","_Browser_makeAnimator","nextNode","_Browser_requestAnimationFrame","divertHrefToApp","title","bodyNode","body","doc","aq","aO","requestAnimationFrame","draw","updateIfNeeded","nextModel","isSync","elm$core$Task$perform","elm$core$Basics$never","history","go","url","pushState","replaceState","_Browser_fakeNode","_Browser_doc","_Browser_window","_Browser_on","eventName","sendToSelf","_Browser_decodeEvent","elm$core$Maybe$Just","elm$core$Maybe$Nothing","_Browser_withNode","doStuff","getElementById","elm$browser$Browser$Dom$NotFound","_Browser_withWindow","functionName","_Browser_getScene","elem","documentElement","aS","scrollWidth","offsetWidth","clientWidth","aw","scrollHeight","offsetHeight","clientHeight","scroll","scrollLeft","scrollTop","millisToPosix","author$project$Actions$WindowSize","author$project$Actions$RandomNote","elm$core$Elm$JsArray$foldr","baseCase","_n0","tree","tail","helper","values","subTree","elm$core$List$cons","elm$core$Dict$foldr","left","right","$temp$func","$temp$acc","dict","elm$core$Char$fromCode","code","fromCharCode","elm$core$String$cons","elm$core$Basics$add","elm$core$Basics$identity","elm$core$Basics$sub","elm$random$Random$Seed","elm$random$Random$next","state0","incr","elm$random$Random$peel","elm$random$Random$int","seed0","lo","range","threshhold","seed","seedN","accountForBias","elm$random$Random$map","genA","_n1","seed1","elm$random$Random$map2","genB","_n2","_n3","seed2","elm$random$Random$pair","author$project$Update$randomNote","mode","min","_char","elm$core$Task$andThen","elm$core$Task$succeed","elm$time$Time$millisToPosix","elm$time$Time$now","Date","now","elm$random$Random$init","state1","elm$random$Random$initialSeed","elm$core$Array$Array_elm_builtin","elm$core$Basics$ceiling","elm$core$Basics$logBase","base","elm$core$Array$shiftStep","elm$core$Elm$JsArray$empty","elm$core$Array$empty","elm$core$Elm$JsArray$initializeFromList","elm$core$List$foldl","elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","elm$core$Tuple$first","elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","elm$core$Basics$floor","elm$core$Basics$max","elm$core$Elm$JsArray$length","elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","elm$core$Elm$JsArray$initialize","elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","elm$core$Char$toCode","elm$core$Char$isLower","elm$core$Char$isUpper","elm$core$Char$isAlpha","elm$core$Char$isAlphaNum","elm$core$Char$isDigit","elm$core$List$length","elm$core$List$map2","elm$core$List$rangeHelp","hi","$temp$lo","$temp$hi","$temp$list","elm$core$List$range","elm$core$List$indexedMap","elm$core$String$all","elm$core$String$fromInt","elm$core$String$join","chunks","elm$core$String$uncons","elm$core$String$split","elm$json$Json$Decode$indent","elm$json$Json$Encode$encode","elm$json$Json$Decode$errorOneOf","error","elm$json$Json$Decode$errorToString","elm$json$Json$Decode$errorToStringHelp","context","errorToStringHelp","err","isSimple","rest","$temp$error","$temp$context","indexName","introduction","json","elm$core$Platform$sendToApp","elm$random$Random$step","elm$random$Random$onEffects","commands","generator","newSeed","elm$random$Random$onSelfMsg","elm$random$Random$cmdMap","elm$random$Random$command","elm$random$Random$generate","author$project$Update$getRandomNote","author$project$ViewModel$Stats","J","author$project$ViewModel$timeAllowed","author$project$ViewModel$initialModel","P","H","aA","aB","ak","aJ","aK","aL","aN","B","aT","elm$core$Task$init","elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","elm$core$List$foldr","elm$core$List$map","elm$core$Task$map","taskA","elm$core$Task$map2","taskB","elm$core$Task$sequence","tasks","elm$core$Task$spawnCmd","elm$core$Task$onEffects","elm$core$Task$onSelfMsg","elm$core$Task$cmdMap","elm$core$Task$command","toMessage","elm$core$String$length","elm$core$String$slice","elm$core$String$dropLeft","elm$core$String$indexes","elm$core$String$isEmpty","elm$core$String$left","elm$core$String$contains","elm$core$String$toInt","total","code0","elm$url$Url$Url","protocol","host","port_","path","query","fragment","U","V","aa","ac","af","ag","elm$url$Url$chompBeforePath","params","elm$url$Url$chompBeforeQuery","elm$url$Url$chompBeforeFragment","elm$browser$Browser$Dom$getViewport","aj","an","pageXOffset","G","pageYOffset","elm$core$Basics$round","elm$core$Platform$Cmd$batch","author$project$Main$init","author$project$Actions$ReceiveStats","author$project$Actions$Tick","elm$json$Json$Decode$field","elm$json$Json$Decode$int","author$project$Main$noteStatsDecoder","W","aD","author$project$ViewModel$OctaveStats","Z","aE","elm$json$Json$Decode$list","author$project$Main$octaveStatsDecoder","author$project$Main$statsDecoder","elm$json$Json$Decode$decodeValue","author$project$Main$decodeStats","encoded","res","author$project$Ports$receiveStats","elm$browser$Browser$AnimationManager$Delta","elm$browser$Browser$AnimationManager$State","request","oldTime","K","ai","al","elm$browser$Browser$AnimationManager$init","elm$browser$Browser$AnimationManager$now","elm$browser$Browser$AnimationManager$rAF","cancelAnimationFrame","elm$core$Platform$sendToSelf","elm$core$Process$kill","elm$core$Process$spawn","elm$browser$Browser$AnimationManager$onEffects","pid","elm$browser$Browser$AnimationManager$onSelfMsg","newTime","elm$core$Basics$composeL","elm$browser$Browser$AnimationManager$subMap","elm$browser$Browser$AnimationManager$subscription","elm$browser$Browser$Events$onAnimationFrameDelta","elm$browser$Browser$Events$MySub","elm$browser$Browser$Events$State","pids","ab","elm$core$Dict$RBEmpty_elm_builtin","elm$core$Dict$empty","elm$browser$Browser$Events$init","elm$browser$Browser$Events$addKey","elm$browser$Browser$Events$nodeToKey","elm$browser$Browser$Events$Event","T","X","elm$browser$Browser$Events$spawn","elm$core$Dict$RBNode_elm_builtin","elm$core$Basics$compare","elm$core$Dict$balance","color","lK","lV","_n6","llK","llV","llLeft","llRight","lRight","rK","rV","rLeft","rRight","lLeft","elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","elm$core$Dict$insert","elm$core$Dict$fromList","assocs","elm$core$Dict$foldl","elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","stepState","rKey","rValue","lKey","lValue","leftovers","intermediateResult","_n4","elm$core$Dict$union","t1","t2","elm$browser$Browser$Events$onEffects","stepRight","deads","lives","news","stepLeft","_n5","stepBoth","newSubs","deadPids","livePids","makeNewPids","elm$core$List$maybeCons","mx","elm$core$List$filterMap","elm$browser$Browser$Events$onSelfMsg","messages","subKey","elm$browser$Browser$Events$subMap","elm$browser$Browser$Events$subscription","elm$browser$Browser$Events$on","elm$core$Basics$composeR","elm$core$Platform$Sub$batch","elm$core$Platform$Sub$none","elm$json$Json$Encode$bool","elm$json$Json$Encode$int","elm$json$Json$Encode$string","author$project$Ports$answer","_Platform_outgoingPort","pairs","obj","elm$core$Platform$Cmd$none","author$project$Update$update","width","height","currentNote","summary","status","cmd","elm$svg$Svg$trustedNode","elm$svg$Svg$g","elm$svg$Svg$path","elm$svg$Svg$Attributes$d","elm$svg$Svg$Attributes$transform","author$project$TrebleClef$baseClef","author$project$TrebleClef$trebleClef","author$project$View$baseLines","author$project$View$trebleLines","elm$core$Basics$modBy","elm$core$List$any","isOkay","elm$core$List$member","elm$svg$Svg$Attributes$stroke","elm$svg$Svg$Attributes$strokeWidth","elm$core$Maybe$andThen","maybeValue","elm$core$Maybe$map","maybe","elm$core$Maybe$withDefault","_default","elm_community$list_extra$List$Extra$find","predicate","first","author$project$View$showHint","elm$svg$Svg$circle","elm$virtual_dom$VirtualDom$text","elm$svg$Svg$text","elm$svg$Svg$text_","elm$svg$Svg$Attributes$cx","elm$svg$Svg$Attributes$cy","elm$svg$Svg$Attributes$dx","elm$svg$Svg$Attributes$dy","elm$svg$Svg$Attributes$fill","elm$svg$Svg$Attributes$fontSize","elm$svg$Svg$Attributes$r","elm$svg$Svg$Attributes$textAnchor","elm$svg$Svg$Attributes$x","elm$svg$Svg$Attributes$y","author$project$View$currentNote","author$project$View$noteOffset","hint","ypos","author$project$View$baseForOctave","noteTxt","hintNode","odd","direction","n_","lines","y_","yStr","n2","author$project$View$drawLedger","author$project$Actions$Guess","elm$core$List$append","elm$core$List$concatMap","lists","elm$html$Html$table","elm$html$Html$td","elm$html$Html$text","elm$html$Html$tr","elm$core$List$filter","elm$core$Tuple$second","elm$html$Html$Attributes$class","elm$html$Html$Attributes$stringProperty","elm$html$Html$Attributes$classList","elm$html$Html$Attributes$style","elm$virtual_dom$VirtualDom$on","elm$html$Html$Events$on","elm$html$Html$Events$onClick","elm$svg$Svg$Attributes$class","author$project$View$answer","guess","correctOrIncorrect","leftFilled","rightFilled","elm$core$String$fromFloat","elm$html$Html$div","author$project$Actions$ToggleStats","author$project$ViewModel$totalsForOctave","agg","elm$html$Html$span","author$project$View$summary","answers","author$project$ViewModel$percentage","author$project$View$footer","author$project$View$countdown","author$project$Actions$ToggleStatus","elm$html$Html$button","author$project$View$modeButton","txt","cls","elm$html$Html$i","author$project$View$overlay","noteDivs","pc","pi","author$project$View$stats","author$project$View$stave","elm$svg$Svg$svg","elm$svg$Svg$Attributes$height","elm$svg$Svg$Attributes$viewBox","elm$svg$Svg$Attributes$width","author$project$Main$main","author$project$View$modeSelector","_Platform_mergeExportsProd","this"],"mappings":"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","file":"static/js/main.62265745.chunk.js","sourcesContent":["require('./main.css');\nvar logoPath = require('./logo.svg');\nconst { Elm } = require('./Main.elm');\n\nvar root = document.getElementById('root');\n\nfunction emptyStats() {\n    return {\n        octaves: [0,1,2,3,4,5].map(function(o) {\n            return {\n                octave: o,\n                notes: ['C', 'D', 'E', 'F', 'G', 'A', 'B'].map(function (n) {\n                    return {\n                        note: n,\n                        correct: 0,\n                        incorrect: 0\n                    };\n                })\n            };\n        })\n    }\n}\n\nconst app = Elm.Main.init({\n    node: root\n});\nvar stats = JSON.parse(window.localStorage.getItem('note_stats')) || emptyStats();\nif(!stats.octaves) {\n    stats = emptyStats();\n}\napp.ports.receiveStats.send(stats);\n\nfunction noteIndex(notes, note) {\n    for(var i=0; i<notes.length; i++) {\n        if(notes[i].note == note) {\n            return i;\n        }\n    }\n    return -1;\n}\n\napp.ports.answer.subscribe(function(answer) {\n    console.log(answer);\n    var index = noteIndex(stats.octaves[answer.octave].notes, answer.note);\n    if(answer.correct) {\n        stats.octaves[answer.octave].notes[index].correct += 1\n    } else {\n        stats.octaves[answer.octave].notes[index].incorrect += 1\n    }\n\n    window.localStorage.setItem('note_stats', JSON.stringify(stats));\n    app.ports.receiveStats.send(stats);\n});\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.6ead5199.svg\";","(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === elm$core$Basics$EQ ? 0 : ord === elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.M.y === region.S.y)\n\t{\n\t\treturn 'on line ' + region.M.y;\n\t}\n\treturn 'on lines ' + region.M.y + ' through ' + region.S.y;\n}\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = elm$core$Set$toList(x);\n\t\ty = elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = elm$core$Dict$toList(x);\n\t\ty = elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (!x.$)\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? elm$core$Basics$LT : n ? elm$core$Basics$GT : elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800)\n\t\t\t+\n\t\t\tString.fromCharCode(code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? elm$core$Maybe$Nothing\n\t\t: elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? elm$core$Maybe$Just(n) : elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2(elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nvar _Json_decodeInt = { $: 2 };\nvar _Json_decodeBool = { $: 3 };\nvar _Json_decodeFloat = { $: 4 };\nvar _Json_decodeValue = { $: 5 };\nvar _Json_decodeString = { $: 6 };\n\nfunction _Json_decodeList(decoder) { return { $: 7, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 8, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 9, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 11,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 12,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 13,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 14,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 15,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 3:\n\t\t\treturn (typeof value === 'boolean')\n\t\t\t\t? elm$core$Result$Ok(value)\n\t\t\t\t: _Json_expecting('a BOOL', value);\n\n\t\tcase 2:\n\t\t\tif (typeof value !== 'number') {\n\t\t\t\treturn _Json_expecting('an INT', value);\n\t\t\t}\n\n\t\t\tif (-2147483647 < value && value < 2147483647 && (value | 0) === value) {\n\t\t\t\treturn elm$core$Result$Ok(value);\n\t\t\t}\n\n\t\t\tif (isFinite(value) && !(value % 1)) {\n\t\t\t\treturn elm$core$Result$Ok(value);\n\t\t\t}\n\n\t\t\treturn _Json_expecting('an INT', value);\n\n\t\tcase 4:\n\t\t\treturn (typeof value === 'number')\n\t\t\t\t? elm$core$Result$Ok(value)\n\t\t\t\t: _Json_expecting('a FLOAT', value);\n\n\t\tcase 6:\n\t\t\treturn (typeof value === 'string')\n\t\t\t\t? elm$core$Result$Ok(value)\n\t\t\t\t: (value instanceof String)\n\t\t\t\t\t? elm$core$Result$Ok(value + '')\n\t\t\t\t\t: _Json_expecting('a STRING', value);\n\n\t\tcase 9:\n\t\t\treturn (value === null)\n\t\t\t\t? elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 5:\n\t\t\treturn elm$core$Result$Ok(_Json_wrap(value));\n\n\t\tcase 7:\n\t\t\tif (!Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 8:\n\t\t\tif (!Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 10:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 11:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn (elm$core$Result$isOk(result)) ? result : elm$core$Result$Err(A2(elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 12:\n\t\t\tif (typeof value !== 'object' || value === null || Array.isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 13:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn elm$core$Result$Ok(answer);\n\n\t\tcase 14:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 15:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif (elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn elm$core$Result$Err(elm$json$Json$Decode$OneOf(elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2(elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn elm$core$Result$Err(A2(elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 3:\n\t\tcase 2:\n\t\tcase 4:\n\t\tcase 6:\n\t\tcase 5:\n\t\t\treturn true;\n\n\t\tcase 9:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 7:\n\t\tcase 8:\n\t\tcase 12:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 10:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 13:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 14:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 15:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.az,\n\t\timpl.aP,\n\t\timpl.aM,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\telm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\telm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2(elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3(elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\telm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tk: func(record.k),\n\t\tN: record.N,\n\t\tL: record.L\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t(key !== 'value' || key !== 'checked' || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\tvalue\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\tvalue\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.k;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.N;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.L) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\tvar oldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tvar newMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.az,\n\t\timpl.aP,\n\t\timpl.aM,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.aR;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.az,\n\t\timpl.aP,\n\t\timpl.aM,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.z && impl.z(sendToApp)\n\t\t\tvar view = impl.aR;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aq);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.aO) && (_VirtualDom_doc.title = title = doc.aO);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aF;\n\tvar onUrlRequest = impl.aG;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tz: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.download)\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.af === next.af\n\t\t\t\t\t\t\t&& curr.V === next.V\n\t\t\t\t\t\t\t&& curr.ac.a === next.ac.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taz: function(flags)\n\t\t{\n\t\t\treturn A3(impl.az, flags, _Browser_getUrl(), key);\n\t\t},\n\t\taR: impl.aR,\n\t\taP: impl.aP,\n\t\taM: impl.aM\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn elm$core$Result$isOk(result) ? elm$core$Maybe$Just(result.a) : elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { ax: 'hidden', x: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { ax: 'mozHidden', x: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { ax: 'msHidden', x: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { ax: 'webkitHidden', x: 'webkitvisibilitychange' }\n\t\t: { ax: 'hidden', x: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\tcancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail(elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taj: _Browser_getScene(),\n\t\tan: {\n\t\t\tF: _Browser_window.pageXOffset,\n\t\t\tG: _Browser_window.pageYOffset,\n\t\t\taS: _Browser_doc.documentElement.clientWidth,\n\t\t\taw: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\taS: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\taw: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taj: {\n\t\t\t\taS: node.scrollWidth,\n\t\t\t\taw: node.scrollHeight\n\t\t\t},\n\t\t\tan: {\n\t\t\t\tF: node.scrollLeft,\n\t\t\t\tG: node.scrollTop,\n\t\t\t\taS: node.clientWidth,\n\t\t\t\taw: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taj: _Browser_getScene(),\n\t\t\tan: {\n\t\t\t\tF: x,\n\t\t\t\tG: y,\n\t\t\t\taS: _Browser_doc.documentElement.clientWidth,\n\t\t\t\taw: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\tat: {\n\t\t\t\tF: x + rect.left,\n\t\t\t\tG: y + rect.top,\n\t\t\t\taS: rect.width,\n\t\t\t\taw: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2(elm$core$Task$perform, elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\nvar author$project$Actions$WindowSize = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar author$project$Actions$RandomNote = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _n0) {\n\t\tvar tree = _n0.c;\n\t\tvar tail = _n0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3(elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\telm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3(elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar elm$core$Basics$EQ = 1;\nvar elm$core$Basics$LT = 0;\nvar elm$core$List$cons = _List_cons;\nvar elm$core$Array$toList = function (array) {\n\treturn A3(elm$core$Array$foldr, elm$core$List$cons, _List_Nil, array);\n};\nvar elm$core$Basics$GT = 2;\nvar elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\telm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2(elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar elm$core$Set$toList = function (_n0) {\n\tvar dict = _n0;\n\treturn elm$core$Dict$keys(dict);\n};\nvar elm$core$Char$fromCode = _Char_fromCode;\nvar elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Maybe$Nothing = {$: 1};\nvar elm$core$String$cons = _String_cons;\nvar elm$core$String$fromChar = function (_char) {\n\treturn A2(elm$core$String$cons, _char, '');\n};\nvar elm$core$Basics$add = _Basics_add;\nvar elm$core$Basics$eq = _Utils_equal;\nvar elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar elm$core$Basics$lt = _Utils_lt;\nvar elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar elm$core$Basics$sub = _Basics_sub;\nvar elm$core$Bitwise$and = _Bitwise_and;\nvar elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar elm$random$Random$Generator = elm$core$Basics$identity;\nvar elm$core$Basics$mul = _Basics_mul;\nvar elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$random$Random$next = function (_n0) {\n\tvar state0 = _n0.a;\n\tvar incr = _n0.b;\n\treturn A2(elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar elm$core$Bitwise$xor = _Bitwise_xor;\nvar elm$random$Random$peel = function (_n0) {\n\tvar state = _n0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _n0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _n0.a;\n\t\t\tvar hi = _n0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\telm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar elm$random$Random$map = F2(\n\tfunction (func, _n0) {\n\t\tvar genA = _n0;\n\t\treturn function (seed0) {\n\t\t\tvar _n1 = genA(seed0);\n\t\t\tvar a = _n1.a;\n\t\t\tvar seed1 = _n1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar elm$random$Random$map2 = F3(\n\tfunction (func, _n0, _n1) {\n\t\tvar genA = _n0;\n\t\tvar genB = _n1;\n\t\treturn function (seed0) {\n\t\t\tvar _n2 = genA(seed0);\n\t\t\tvar a = _n2.a;\n\t\t\tvar seed1 = _n2.b;\n\t\t\tvar _n3 = genB(seed1);\n\t\t\tvar b = _n3.a;\n\t\t\tvar seed2 = _n3.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA2(func, a, b),\n\t\t\t\tseed2);\n\t\t};\n\t});\nvar elm$random$Random$pair = F2(\n\tfunction (genA, genB) {\n\t\treturn A3(\n\t\t\telm$random$Random$map2,\n\t\t\tF2(\n\t\t\t\tfunction (a, b) {\n\t\t\t\t\treturn _Utils_Tuple2(a, b);\n\t\t\t\t}),\n\t\t\tgenA,\n\t\t\tgenB);\n\t});\nvar author$project$Update$randomNote = function (mode) {\n\tvar _n0 = function () {\n\t\tswitch (mode) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(2, 3);\n\t\t\tcase 1:\n\t\t\t\treturn _Utils_Tuple2(1, 4);\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(0, 5);\n\t\t}\n\t}();\n\tvar min = _n0.a;\n\tvar max = _n0.b;\n\treturn A2(\n\t\telm$random$Random$map,\n\t\tfunction (_n2) {\n\t\t\tvar o = _n2.a;\n\t\t\tvar n = _n2.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\to,\n\t\t\t\telm$core$String$fromChar(\n\t\t\t\t\telm$core$Char$fromCode(n)));\n\t\t},\n\t\tA2(\n\t\t\telm$random$Random$pair,\n\t\t\tA2(elm$random$Random$int, min, max),\n\t\t\tA2(elm$random$Random$int, 65, 71)));\n};\nvar elm$random$Random$Generate = elm$core$Basics$identity;\nvar elm$core$Task$andThen = _Scheduler_andThen;\nvar elm$core$Task$succeed = _Scheduler_succeed;\nvar elm$random$Random$initialSeed = function (x) {\n\tvar _n0 = elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _n0.a;\n\tvar incr = _n0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn elm$random$Random$next(\n\t\tA2(elm$random$Random$Seed, state2, incr));\n};\nvar elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$time$Time$customZone = elm$time$Time$Zone;\nvar elm$time$Time$Posix = elm$core$Basics$identity;\nvar elm$time$Time$millisToPosix = elm$core$Basics$identity;\nvar elm$time$Time$now = _Time_now(elm$time$Time$millisToPosix);\nvar elm$time$Time$posixToMillis = function (_n0) {\n\tvar millis = _n0;\n\treturn millis;\n};\nvar elm$random$Random$init = A2(\n\telm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn elm$core$Task$succeed(\n\t\t\telm$random$Random$initialSeed(\n\t\t\t\telm$time$Time$posixToMillis(time)));\n\t},\n\telm$time$Time$now);\nvar elm$core$Basics$False = 1;\nvar elm$core$Basics$True = 0;\nvar elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar elm$core$Array$branchFactor = 32;\nvar elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar elm$core$Basics$ceiling = _Basics_ceiling;\nvar elm$core$Basics$fdiv = _Basics_fdiv;\nvar elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar elm$core$Basics$toFloat = _Basics_toFloat;\nvar elm$core$Array$shiftStep = elm$core$Basics$ceiling(\n\tA2(elm$core$Basics$logBase, 2, elm$core$Array$branchFactor));\nvar elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar elm$core$Array$empty = A4(elm$core$Array$Array_elm_builtin, 0, elm$core$Array$shiftStep, elm$core$Elm$JsArray$empty, elm$core$Elm$JsArray$empty);\nvar elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$reverse = function (list) {\n\treturn A3(elm$core$List$foldl, elm$core$List$cons, _List_Nil, list);\n};\nvar elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _n0 = A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _n0.a;\n\t\t\tvar remainingNodes = _n0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\telm$core$List$cons,\n\t\t\t\telm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Tuple$first = function (_n0) {\n\tvar x = _n0.a;\n\treturn x;\n};\nvar elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = elm$core$Basics$ceiling(nodeListSize / elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2(elm$core$Elm$JsArray$initializeFromList, elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2(elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar elm$core$Basics$floor = _Basics_floor;\nvar elm$core$Basics$gt = _Utils_gt;\nvar elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar elm$core$Elm$JsArray$length = _JsArray_length;\nvar elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c),\n\t\t\t\telm$core$Array$shiftStep,\n\t\t\t\telm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * elm$core$Array$branchFactor;\n\t\t\tvar depth = elm$core$Basics$floor(\n\t\t\t\tA2(elm$core$Basics$logBase, elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2(elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\telm$core$Array$Array_elm_builtin,\n\t\t\t\telm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2(elm$core$Basics$max, 5, depth * elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar elm$core$Basics$idiv = _Basics_idiv;\nvar elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = elm$core$Array$Leaf(\n\t\t\t\t\tA3(elm$core$Elm$JsArray$initialize, elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2(elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Basics$le = _Utils_le;\nvar elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % elm$core$Array$branchFactor;\n\t\t\tvar tail = A3(elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - elm$core$Array$branchFactor;\n\t\t\treturn A5(elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$core$Basics$and = _Basics_and;\nvar elm$core$Basics$append = _Utils_append;\nvar elm$core$Basics$or = _Basics_or;\nvar elm$core$Char$toCode = _Char_toCode;\nvar elm$core$Char$isLower = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar elm$core$Char$isUpper = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar elm$core$Char$isAlpha = function (_char) {\n\treturn elm$core$Char$isLower(_char) || elm$core$Char$isUpper(_char);\n};\nvar elm$core$Char$isDigit = function (_char) {\n\tvar code = elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar elm$core$Char$isAlphaNum = function (_char) {\n\treturn elm$core$Char$isLower(_char) || (elm$core$Char$isUpper(_char) || elm$core$Char$isDigit(_char));\n};\nvar elm$core$List$length = function (xs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar elm$core$List$map2 = _List_map2;\nvar elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2(elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3(elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\telm$core$List$range,\n\t\t\t\t0,\n\t\t\t\telm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar elm$core$String$all = _String_all;\nvar elm$core$String$fromInt = _String_fromNumber;\nvar elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar elm$core$String$uncons = _String_uncons;\nvar elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\telm$core$String$join,\n\t\t'\\n    ',\n\t\tA2(elm$core$String$split, '\\n', str));\n};\nvar elm$json$Json$Encode$encode = _Json_encode;\nvar elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + (elm$core$String$fromInt(i + 1) + (') ' + elm$json$Json$Decode$indent(\n\t\t\telm$json$Json$Decode$errorToString(error))));\n\t});\nvar elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2(elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _n1 = elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\t\t\t\tvar _char = _n2.a;\n\t\t\t\t\t\t\tvar rest = _n2.b;\n\t\t\t\t\t\t\treturn elm$core$Char$isAlpha(_char) && A2(elm$core$String$all, elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + (elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2(elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\telm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + (elm$core$String$fromInt(\n\t\t\t\t\t\t\t\telm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2(elm$core$List$indexedMap, elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\telm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\telm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + (elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2(elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar elm$random$Random$step = F2(\n\tfunction (_n0, seed) {\n\t\tvar generator = _n0;\n\t\treturn generator(seed);\n\t});\nvar elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _n1 = A2(elm$random$Random$step, generator, seed);\n\t\t\tvar value = _n1.a;\n\t\t\tvar newSeed = _n1.b;\n\t\t\treturn A2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n2) {\n\t\t\t\t\treturn A3(elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2(elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar elm$random$Random$onSelfMsg = F3(\n\tfunction (_n0, _n1, seed) {\n\t\treturn elm$core$Task$succeed(seed);\n\t});\nvar elm$random$Random$cmdMap = F2(\n\tfunction (func, _n0) {\n\t\tvar generator = _n0;\n\t\treturn A2(elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager(elm$random$Random$init, elm$random$Random$onEffects, elm$random$Random$onSelfMsg, elm$random$Random$cmdMap);\nvar elm$random$Random$command = _Platform_leaf('Random');\nvar elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn elm$random$Random$command(\n\t\t\tA2(elm$random$Random$map, tagger, generator));\n\t});\nvar author$project$Update$getRandomNote = function (mode) {\n\treturn A2(\n\t\telm$random$Random$generate,\n\t\tauthor$project$Actions$RandomNote,\n\t\tauthor$project$Update$randomNote(mode));\n};\nvar author$project$ViewModel$Easy = 0;\nvar author$project$ViewModel$Paused = 1;\nvar author$project$ViewModel$Stats = function (octaves) {\n\treturn {J: octaves};\n};\nvar author$project$ViewModel$Waiting = 0;\nvar author$project$ViewModel$timeAllowed = function (mode) {\n\treturn 1000 * function () {\n\t\tswitch (mode) {\n\t\t\tcase 0:\n\t\t\t\treturn 5;\n\t\t\tcase 1:\n\t\t\t\treturn 4;\n\t\t\tdefault:\n\t\t\t\treturn 3;\n\t\t}\n\t}();\n};\nvar author$project$ViewModel$initialModel = {\n\tP: 0,\n\tH: _Utils_Tuple2(0, 'C'),\n\taA: elm$core$Maybe$Nothing,\n\taB: 0,\n\tak: false,\n\taJ: author$project$ViewModel$Stats(_List_Nil),\n\taK: 0,\n\taL: 1,\n\taN: 'Guess the note...',\n\tB: author$project$ViewModel$timeAllowed(0),\n\taT: _Utils_Tuple2(0, 0)\n};\nvar elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$browser$Browser$Dom$NotFound = elm$core$Basics$identity;\nvar elm$core$Basics$never = function (_n0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _n0;\n\t\tvar $temp$_n0 = nvr;\n\t\t_n0 = $temp$_n0;\n\t\tcontinue never;\n\t}\n};\nvar elm$core$Task$Perform = elm$core$Basics$identity;\nvar elm$core$Task$init = elm$core$Task$succeed(0);\nvar elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\telm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\telm$core$List$reverse(r4)) : A4(elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4(elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\telm$core$List$foldr,\n\t\telm$core$Task$map2(elm$core$List$cons),\n\t\telm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar elm$core$Task$spawnCmd = F2(\n\tfunction (router, _n0) {\n\t\tvar task = _n0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (_n0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar elm$core$Task$onSelfMsg = F3(\n\tfunction (_n0, _n1, _n2) {\n\t\treturn elm$core$Task$succeed(0);\n\t});\nvar elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _n0) {\n\t\tvar task = _n0;\n\t\treturn A2(elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager(elm$core$Task$init, elm$core$Task$onEffects, elm$core$Task$onSelfMsg, elm$core$Task$cmdMap);\nvar elm$core$Task$command = _Platform_leaf('Task');\nvar elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn elm$core$Task$command(\n\t\t\tA2(elm$core$Task$map, toMessage, task));\n\t});\nvar elm$json$Json$Decode$map = _Json_map1;\nvar elm$json$Json$Decode$map2 = _Json_map2;\nvar elm$json$Json$Decode$succeed = _Json_succeed;\nvar elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar elm$core$String$length = _String_length;\nvar elm$core$String$slice = _String_slice;\nvar elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\telm$core$String$slice,\n\t\t\tn,\n\t\t\telm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar elm$core$String$startsWith = _String_startsWith;\nvar elm$url$Url$Http = 0;\nvar elm$url$Url$Https = 1;\nvar elm$core$String$indexes = _String_indexes;\nvar elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3(elm$core$String$slice, 0, n, string);\n\t});\nvar elm$core$String$contains = _String_contains;\nvar elm$core$String$toInt = _String_toInt;\nvar elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {U: fragment, V: host, aa: path, ac: port_, af: protocol, ag: query};\n\t});\nvar elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str) || A2(elm$core$String$contains, '@', str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, ':', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\tA6(elm$url$Url$Url, protocol, str, elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_n0.b.b) {\n\t\t\t\t\tvar i = _n0.a;\n\t\t\t\t\tvar _n1 = elm$core$String$toInt(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_n1.$ === 1) {\n\t\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _n1;\n\t\t\t\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\telm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2(elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '/', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A5(elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2(elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '?', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A4(elm$url$Url$chompBeforeQuery, protocol, elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\telm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif (elm$core$String$isEmpty(str)) {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _n0 = A2(elm$core$String$indexes, '#', str);\n\t\t\tif (!_n0.b) {\n\t\t\t\treturn A3(elm$url$Url$chompBeforeFragment, protocol, elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _n0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\telm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\telm$core$Maybe$Just(\n\t\t\t\t\t\tA2(elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2(elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar elm$url$Url$fromString = function (str) {\n\treturn A2(elm$core$String$startsWith, 'http://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2(elm$core$String$dropLeft, 7, str)) : (A2(elm$core$String$startsWith, 'https://', str) ? A2(\n\t\telm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2(elm$core$String$dropLeft, 8, str)) : elm$core$Maybe$Nothing);\n};\nvar elm$browser$Browser$Dom$getViewport = _Browser_withWindow(_Browser_getViewport);\nvar elm$core$Basics$round = _Basics_round;\nvar elm$core$Platform$Cmd$batch = _Platform_batch;\nvar author$project$Main$init = function () {\n\tvar model = author$project$ViewModel$initialModel;\n\treturn _Utils_Tuple2(\n\t\tmodel,\n\t\telm$core$Platform$Cmd$batch(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$core$Task$perform,\n\t\t\t\t\tfunction (v) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tauthor$project$Actions$WindowSize,\n\t\t\t\t\t\t\telm$core$Basics$round(v.aj.aS),\n\t\t\t\t\t\t\telm$core$Basics$round(v.aj.aw));\n\t\t\t\t\t},\n\t\t\t\t\telm$browser$Browser$Dom$getViewport),\n\t\t\t\t\tauthor$project$Update$getRandomNote(model.aB)\n\t\t\t\t])));\n}();\nvar author$project$Actions$ReceiveStats = function (a) {\n\treturn {$: 5, a: a};\n};\nvar author$project$Actions$Tick = function (a) {\n\treturn {$: 4, a: a};\n};\nvar author$project$ViewModel$NoteStats = F3(\n\tfunction (note, correct, incorrect) {\n\t\treturn {as: correct, W: incorrect, aD: note};\n\t});\nvar elm$json$Json$Decode$field = _Json_decodeField;\nvar elm$json$Json$Decode$int = _Json_decodeInt;\nvar elm$json$Json$Decode$map3 = _Json_map3;\nvar elm$json$Json$Decode$string = _Json_decodeString;\nvar author$project$Main$noteStatsDecoder = A4(\n\telm$json$Json$Decode$map3,\n\tauthor$project$ViewModel$NoteStats,\n\tA2(elm$json$Json$Decode$field, 'note', elm$json$Json$Decode$string),\n\tA2(elm$json$Json$Decode$field, 'correct', elm$json$Json$Decode$int),\n\tA2(elm$json$Json$Decode$field, 'incorrect', elm$json$Json$Decode$int));\nvar author$project$ViewModel$OctaveStats = F2(\n\tfunction (octave, notes) {\n\t\treturn {Z: notes, aE: octave};\n\t});\nvar elm$json$Json$Decode$list = _Json_decodeList;\nvar author$project$Main$octaveStatsDecoder = A3(\n\telm$json$Json$Decode$map2,\n\tauthor$project$ViewModel$OctaveStats,\n\tA2(elm$json$Json$Decode$field, 'octave', elm$json$Json$Decode$int),\n\tA2(\n\t\telm$json$Json$Decode$field,\n\t\t'notes',\n\t\telm$json$Json$Decode$list(author$project$Main$noteStatsDecoder)));\nvar author$project$Main$statsDecoder = A2(\n\telm$json$Json$Decode$map,\n\tauthor$project$ViewModel$Stats,\n\tA2(\n\t\telm$json$Json$Decode$field,\n\t\t'octaves',\n\t\telm$json$Json$Decode$list(author$project$Main$octaveStatsDecoder)));\nvar elm$json$Json$Decode$decodeValue = _Json_run;\nvar author$project$Main$decodeStats = function (encoded) {\n\tvar res = A2(elm$json$Json$Decode$decodeValue, author$project$Main$statsDecoder, encoded);\n\tif (res.$ === 1) {\n\t\tvar err = res.a;\n\t\treturn author$project$ViewModel$Stats(_List_Nil);\n\t} else {\n\t\tvar s = res.a;\n\t\treturn s;\n\t}\n};\nvar elm$json$Json$Decode$value = _Json_decodeValue;\nvar author$project$Ports$receiveStats = _Platform_incomingPort('receiveStats', elm$json$Json$Decode$value);\nvar author$project$ViewModel$Playing = 0;\nvar elm$browser$Browser$AnimationManager$Delta = function (a) {\n\treturn {$: 1, a: a};\n};\nvar elm$browser$Browser$AnimationManager$State = F3(\n\tfunction (subs, request, oldTime) {\n\t\treturn {K: oldTime, ai: request, al: subs};\n\t});\nvar elm$browser$Browser$AnimationManager$init = elm$core$Task$succeed(\n\tA3(elm$browser$Browser$AnimationManager$State, _List_Nil, elm$core$Maybe$Nothing, 0));\nvar elm$browser$Browser$AnimationManager$now = _Browser_now(0);\nvar elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(0);\nvar elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar elm$core$Process$kill = _Scheduler_kill;\nvar elm$core$Process$spawn = _Scheduler_spawn;\nvar elm$browser$Browser$AnimationManager$onEffects = F3(\n\tfunction (router, subs, _n0) {\n\t\tvar request = _n0.ai;\n\t\tvar oldTime = _n0.K;\n\t\tvar _n1 = _Utils_Tuple2(request, subs);\n\t\tif (_n1.a.$ === 1) {\n\t\t\tif (!_n1.b.b) {\n\t\t\t\tvar _n2 = _n1.a;\n\t\t\t\treturn elm$browser$Browser$AnimationManager$init;\n\t\t\t} else {\n\t\t\t\tvar _n4 = _n1.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (pid) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\t\tfunction (time) {\n\t\t\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\t\t\telm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\t\t\ttime));\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$now);\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Process$spawn(\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\t\t\telm$core$Platform$sendToSelf(router),\n\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$rAF)));\n\t\t\t}\n\t\t} else {\n\t\t\tif (!_n1.b.b) {\n\t\t\t\tvar pid = _n1.a.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (_n3) {\n\t\t\t\t\t\treturn elm$browser$Browser$AnimationManager$init;\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Process$kill(pid));\n\t\t\t} else {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA3(elm$browser$Browser$AnimationManager$State, subs, request, oldTime));\n\t\t\t}\n\t\t}\n\t});\nvar elm$browser$Browser$AnimationManager$onSelfMsg = F3(\n\tfunction (router, newTime, _n0) {\n\t\tvar subs = _n0.al;\n\t\tvar oldTime = _n0.K;\n\t\tvar send = function (sub) {\n\t\t\tif (!sub.$) {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(\n\t\t\t\t\t\telm$time$Time$millisToPosix(newTime)));\n\t\t\t} else {\n\t\t\t\tvar tagger = sub.a;\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Platform$sendToApp,\n\t\t\t\t\trouter,\n\t\t\t\t\ttagger(newTime - oldTime));\n\t\t\t}\n\t\t};\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pid) {\n\t\t\t\treturn A2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\tfunction (_n1) {\n\t\t\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\t\t\tA3(\n\t\t\t\t\t\t\t\telm$browser$Browser$AnimationManager$State,\n\t\t\t\t\t\t\t\tsubs,\n\t\t\t\t\t\t\t\telm$core$Maybe$Just(pid),\n\t\t\t\t\t\t\t\tnewTime));\n\t\t\t\t\t},\n\t\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\t\tA2(elm$core$List$map, send, subs)));\n\t\t\t},\n\t\t\telm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Task$andThen,\n\t\t\t\t\telm$core$Platform$sendToSelf(router),\n\t\t\t\t\telm$browser$Browser$AnimationManager$rAF)));\n\t});\nvar elm$browser$Browser$AnimationManager$Time = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$browser$Browser$AnimationManager$subMap = F2(\n\tfunction (func, sub) {\n\t\tif (!sub.$) {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn elm$browser$Browser$AnimationManager$Time(\n\t\t\t\tA2(elm$core$Basics$composeL, func, tagger));\n\t\t} else {\n\t\t\tvar tagger = sub.a;\n\t\t\treturn elm$browser$Browser$AnimationManager$Delta(\n\t\t\t\tA2(elm$core$Basics$composeL, func, tagger));\n\t\t}\n\t});\n_Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager(elm$browser$Browser$AnimationManager$init, elm$browser$Browser$AnimationManager$onEffects, elm$browser$Browser$AnimationManager$onSelfMsg, 0, elm$browser$Browser$AnimationManager$subMap);\nvar elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');\nvar elm$browser$Browser$AnimationManager$onAnimationFrameDelta = function (tagger) {\n\treturn elm$browser$Browser$AnimationManager$subscription(\n\t\telm$browser$Browser$AnimationManager$Delta(tagger));\n};\nvar elm$browser$Browser$Events$onAnimationFrameDelta = elm$browser$Browser$AnimationManager$onAnimationFrameDelta;\nvar elm$browser$Browser$Events$Window = 1;\nvar elm$browser$Browser$Events$MySub = F3(\n\tfunction (a, b, c) {\n\t\treturn {$: 0, a: a, b: b, c: c};\n\t});\nvar elm$browser$Browser$Events$State = F2(\n\tfunction (subs, pids) {\n\t\treturn {ab: pids, al: subs};\n\t});\nvar elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar elm$core$Dict$empty = elm$core$Dict$RBEmpty_elm_builtin;\nvar elm$browser$Browser$Events$init = elm$core$Task$succeed(\n\tA2(elm$browser$Browser$Events$State, _List_Nil, elm$core$Dict$empty));\nvar elm$browser$Browser$Events$nodeToKey = function (node) {\n\tif (!node) {\n\t\treturn 'd_';\n\t} else {\n\t\treturn 'w_';\n\t}\n};\nvar elm$browser$Browser$Events$addKey = function (sub) {\n\tvar node = sub.a;\n\tvar name = sub.b;\n\treturn _Utils_Tuple2(\n\t\t_Utils_ap(\n\t\t\telm$browser$Browser$Events$nodeToKey(node),\n\t\t\tname),\n\t\tsub);\n};\nvar elm$browser$Browser$Events$Event = F2(\n\tfunction (key, event) {\n\t\treturn {T: event, X: key};\n\t});\nvar elm$browser$Browser$Events$spawn = F3(\n\tfunction (router, key, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar actualNode = function () {\n\t\t\tif (!node) {\n\t\t\t\treturn _Browser_doc;\n\t\t\t} else {\n\t\t\t\treturn _Browser_window;\n\t\t\t}\n\t\t}();\n\t\treturn A2(\n\t\t\telm$core$Task$map,\n\t\t\tfunction (value) {\n\t\t\t\treturn _Utils_Tuple2(key, value);\n\t\t\t},\n\t\t\tA3(\n\t\t\t\t_Browser_on,\n\t\t\t\tactualNode,\n\t\t\t\tname,\n\t\t\t\tfunction (event) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\telm$core$Platform$sendToSelf,\n\t\t\t\t\t\trouter,\n\t\t\t\t\t\tA2(elm$browser$Browser$Events$Event, key, event));\n\t\t\t\t}));\n\t});\nvar elm$core$Dict$Black = 1;\nvar elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar elm$core$Basics$compare = _Utils_compare;\nvar elm$core$Dict$Red = 0;\nvar elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _n1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _n3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _n5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _n6 = left.d;\n\t\t\t\tvar _n7 = _n6.a;\n\t\t\t\tvar llK = _n6.b;\n\t\t\t\tvar llV = _n6.c;\n\t\t\t\tvar llLeft = _n6.d;\n\t\t\t\tvar llRight = _n6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\telm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5(elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 0, key, value, elm$core$Dict$RBEmpty_elm_builtin, elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _n1 = A2(elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_n1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\telm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3(elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _n0 = A3(elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_n0.$ === -1) && (!_n0.a)) {\n\t\t\tvar _n1 = _n0.a;\n\t\t\tvar k = _n0.b;\n\t\t\tvar v = _n0.c;\n\t\t\tvar l = _n0.d;\n\t\t\tvar r = _n0.e;\n\t\t\treturn A5(elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _n0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar elm$core$Dict$fromList = function (assocs) {\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_n0, dict) {\n\t\t\t\tvar key = _n0.a;\n\t\t\t\tvar value = _n0.b;\n\t\t\t\treturn A3(elm$core$Dict$insert, key, value, dict);\n\t\t\t}),\n\t\telm$core$Dict$empty,\n\t\tassocs);\n};\nvar elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3(elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _n0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _n0.a;\n\t\t\t\t\tvar result = _n0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _n2 = list.a;\n\t\t\t\t\t\tvar lKey = _n2.a;\n\t\t\t\t\t\tvar lValue = _n2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_n0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_n0 = $temp$_n0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _n3 = A3(\n\t\t\telm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\telm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _n3.a;\n\t\tvar intermediateResult = _n3.b;\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n4, result) {\n\t\t\t\t\tvar k = _n4.a;\n\t\t\t\t\tvar v = _n4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar elm$core$Dict$union = F2(\n\tfunction (t1, t2) {\n\t\treturn A3(elm$core$Dict$foldl, elm$core$Dict$insert, t2, t1);\n\t});\nvar elm$browser$Browser$Events$onEffects = F3(\n\tfunction (router, subs, state) {\n\t\tvar stepRight = F3(\n\t\t\tfunction (key, sub, _n6) {\n\t\t\t\tvar deads = _n6.a;\n\t\t\t\tvar lives = _n6.b;\n\t\t\t\tvar news = _n6.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tlives,\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$cons,\n\t\t\t\t\t\tA3(elm$browser$Browser$Events$spawn, router, key, sub),\n\t\t\t\t\t\tnews));\n\t\t\t});\n\t\tvar stepLeft = F3(\n\t\t\tfunction (_n4, pid, _n5) {\n\t\t\t\tvar deads = _n5.a;\n\t\t\t\tvar lives = _n5.b;\n\t\t\t\tvar news = _n5.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2(elm$core$List$cons, pid, deads),\n\t\t\t\t\tlives,\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar stepBoth = F4(\n\t\t\tfunction (key, pid, _n2, _n3) {\n\t\t\t\tvar deads = _n3.a;\n\t\t\t\tvar lives = _n3.b;\n\t\t\t\tvar news = _n3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tdeads,\n\t\t\t\t\tA3(elm$core$Dict$insert, key, pid, lives),\n\t\t\t\t\tnews);\n\t\t\t});\n\t\tvar newSubs = A2(elm$core$List$map, elm$browser$Browser$Events$addKey, subs);\n\t\tvar _n0 = A6(\n\t\t\telm$core$Dict$merge,\n\t\t\tstepLeft,\n\t\t\tstepBoth,\n\t\t\tstepRight,\n\t\t\tstate.ab,\n\t\t\telm$core$Dict$fromList(newSubs),\n\t\t\t_Utils_Tuple3(_List_Nil, elm$core$Dict$empty, _List_Nil));\n\t\tvar deadPids = _n0.a;\n\t\tvar livePids = _n0.b;\n\t\tvar makeNewPids = _n0.c;\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (pids) {\n\t\t\t\treturn elm$core$Task$succeed(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$browser$Browser$Events$State,\n\t\t\t\t\t\tnewSubs,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$core$Dict$union,\n\t\t\t\t\t\t\tlivePids,\n\t\t\t\t\t\t\telm$core$Dict$fromList(pids))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm$core$Task$andThen,\n\t\t\t\tfunction (_n1) {\n\t\t\t\t\treturn elm$core$Task$sequence(makeNewPids);\n\t\t\t\t},\n\t\t\t\telm$core$Task$sequence(\n\t\t\t\t\tA2(elm$core$List$map, elm$core$Process$kill, deadPids))));\n\t});\nvar elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _n0 = f(mx);\n\t\tif (!_n0.$) {\n\t\t\tvar x = _n0.a;\n\t\t\treturn A2(elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\telm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar elm$browser$Browser$Events$onSelfMsg = F3(\n\tfunction (router, _n0, state) {\n\t\tvar key = _n0.X;\n\t\tvar event = _n0.T;\n\t\tvar toMessage = function (_n2) {\n\t\t\tvar subKey = _n2.a;\n\t\t\tvar _n3 = _n2.b;\n\t\t\tvar node = _n3.a;\n\t\t\tvar name = _n3.b;\n\t\t\tvar decoder = _n3.c;\n\t\t\treturn _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : elm$core$Maybe$Nothing;\n\t\t};\n\t\tvar messages = A2(elm$core$List$filterMap, toMessage, state.al);\n\t\treturn A2(\n\t\t\telm$core$Task$andThen,\n\t\t\tfunction (_n1) {\n\t\t\t\treturn elm$core$Task$succeed(state);\n\t\t\t},\n\t\t\telm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\telm$core$Platform$sendToApp(router),\n\t\t\t\t\tmessages)));\n\t});\nvar elm$browser$Browser$Events$subMap = F2(\n\tfunction (func, _n0) {\n\t\tvar node = _n0.a;\n\t\tvar name = _n0.b;\n\t\tvar decoder = _n0.c;\n\t\treturn A3(\n\t\t\telm$browser$Browser$Events$MySub,\n\t\t\tnode,\n\t\t\tname,\n\t\t\tA2(elm$json$Json$Decode$map, func, decoder));\n\t});\n_Platform_effectManagers['Browser.Events'] = _Platform_createManager(elm$browser$Browser$Events$init, elm$browser$Browser$Events$onEffects, elm$browser$Browser$Events$onSelfMsg, 0, elm$browser$Browser$Events$subMap);\nvar elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');\nvar elm$browser$Browser$Events$on = F3(\n\tfunction (node, name, decoder) {\n\t\treturn elm$browser$Browser$Events$subscription(\n\t\t\tA3(elm$browser$Browser$Events$MySub, node, name, decoder));\n\t});\nvar elm$browser$Browser$Events$onResize = function (func) {\n\treturn A3(\n\t\telm$browser$Browser$Events$on,\n\t\t1,\n\t\t'resize',\n\t\tA2(\n\t\t\telm$json$Json$Decode$field,\n\t\t\t'target',\n\t\t\tA3(\n\t\t\t\telm$json$Json$Decode$map2,\n\t\t\t\tfunc,\n\t\t\t\tA2(elm$json$Json$Decode$field, 'innerWidth', elm$json$Json$Decode$int),\n\t\t\t\tA2(elm$json$Json$Decode$field, 'innerHeight', elm$json$Json$Decode$int))));\n};\nvar elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar elm$core$Platform$Sub$batch = _Platform_batch;\nvar elm$core$Platform$Sub$none = elm$core$Platform$Sub$batch(_List_Nil);\nvar author$project$Main$subscriptions = function (model) {\n\treturn elm$core$Platform$Sub$batch(\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$browser$Browser$Events$onResize(author$project$Actions$WindowSize),\n\t\t\t\tauthor$project$Ports$receiveStats(\n\t\t\t\tA2(elm$core$Basics$composeR, author$project$Main$decodeStats, author$project$Actions$ReceiveStats)),\n\t\t\t\t(!model.aL) ? elm$browser$Browser$Events$onAnimationFrameDelta(author$project$Actions$Tick) : elm$core$Platform$Sub$none\n\t\t\t]));\n};\nvar elm$json$Json$Encode$bool = _Json_wrap;\nvar elm$json$Json$Encode$int = _Json_wrap;\nvar elm$json$Json$Encode$object = function (pairs) {\n\treturn _Json_wrap(\n\t\tA3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_n0, obj) {\n\t\t\t\t\tvar k = _n0.a;\n\t\t\t\t\tvar v = _n0.b;\n\t\t\t\t\treturn A3(_Json_addField, k, v, obj);\n\t\t\t\t}),\n\t\t\t_Json_emptyObject(0),\n\t\t\tpairs));\n};\nvar elm$json$Json$Encode$string = _Json_wrap;\nvar author$project$Ports$answer = _Platform_outgoingPort(\n\t'answer',\n\tfunction ($) {\n\t\treturn elm$json$Json$Encode$object(\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'correct',\n\t\t\t\t\telm$json$Json$Encode$bool($.as)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'note',\n\t\t\t\t\telm$json$Json$Encode$string($.aD)),\n\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t'octave',\n\t\t\t\t\telm$json$Json$Encode$int($.aE))\n\t\t\t\t]));\n\t});\nvar author$project$ViewModel$Incorrect = 2;\nvar elm$core$Basics$not = _Basics_not;\nvar elm$core$Platform$Cmd$none = elm$core$Platform$Cmd$batch(_List_Nil);\nvar author$project$Update$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar width = msg.a;\n\t\t\t\tvar height = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taT: _Utils_Tuple2(width, height)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 1:\n\t\t\t\tvar note = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{P: 0, H: note}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 2:\n\t\t\t\tvar mode = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{aB: mode}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 7:\n\t\t\t\tvar o = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{aK: o}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\tvar note = msg.a;\n\t\t\t\tvar _n1 = model.H;\n\t\t\t\tvar octave = _n1.a;\n\t\t\t\tvar currentNote = _n1.b;\n\t\t\t\tvar correct = _Utils_eq(note, currentNote);\n\t\t\t\tvar _n2 = function () {\n\t\t\t\t\tif (correct) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_Tuple2('Correct! ' + (note + ' is the right answer'), 0),\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\tauthor$project$Update$getRandomNote(model.aB),\n\t\t\t\t\t\t\t\tauthor$project$ViewModel$timeAllowed(model.aB)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_Tuple2('Wrong answer :( try again', 2),\n\t\t\t\t\t\t\t_Utils_Tuple2(elm$core$Platform$Cmd$none, model.B));\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar _n3 = _n2.a;\n\t\t\t\tvar summary = _n3.a;\n\t\t\t\tvar status = _n3.b;\n\t\t\t\tvar _n4 = _n2.b;\n\t\t\t\tvar cmd = _n4.a;\n\t\t\t\tvar time = _n4.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tP: status,\n\t\t\t\t\t\t\taA: elm$core$Maybe$Just(note),\n\t\t\t\t\t\t\taN: summary,\n\t\t\t\t\t\t\tB: time\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tauthor$project$Ports$answer(\n\t\t\t\t\t\t\t\t{as: correct, aD: currentNote, aE: octave}),\n\t\t\t\t\t\t\t\tcmd\n\t\t\t\t\t\t\t])));\n\t\t\tcase 4:\n\t\t\t\tvar t = msg.a;\n\t\t\t\tvar time = model.B - t;\n\t\t\t\tvar _n6 = model.H;\n\t\t\t\tvar octave = _n6.a;\n\t\t\t\tvar note = _n6.b;\n\t\t\t\treturn (time <= 0) ? _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tB: author$project$ViewModel$timeAllowed(model.aB)\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$batch(\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tauthor$project$Ports$answer(\n\t\t\t\t\t\t\t\t{as: false, aD: note, aE: octave}),\n\t\t\t\t\t\t\t\tauthor$project$Update$getRandomNote(model.aB)\n\t\t\t\t\t\t\t]))) : _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{B: time}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 6:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{ak: !model.ak}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tcase 8:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\taL: function () {\n\t\t\t\t\t\t\t\tvar _n7 = model.aL;\n\t\t\t\t\t\t\t\tif (!_n7) {\n\t\t\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}()\n\t\t\t\t\t\t}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t\tdefault:\n\t\t\t\tvar stats = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{aJ: stats}),\n\t\t\t\t\telm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar elm$svg$Svg$g = elm$svg$Svg$trustedNode('g');\nvar elm$svg$Svg$path = elm$svg$Svg$trustedNode('path');\nvar elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');\nvar elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');\nvar author$project$TrebleClef$baseClef = _List_fromArray(\n\t[\n\t\tA2(\n\t\telm$svg$Svg$g,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$transform('translate(5.7,53.2), scale(0.15)')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$path,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$d('M10.332,95c0.46-0.827,1.272-1.173,2.078-1.539     c4.8-2.188,9.741-4.08,14.325-6.72c8.059-4.639,15.17-10.369,20.606-18.017c4.833-6.8,7.699-14.3,8.348-22.656     c0.592-7.635,0.188-15.176-1.76-22.599c-0.841-3.201-2.213-6.158-4.329-8.746c-3.538-4.328-8.21-5.795-13.583-5.275     c-4.443,0.43-8.435,2.068-11.842,5.022c-2.297,1.992-3.724,4.463-4.143,7.484c-0.057,0.409-0.27,0.977,0.155,1.223     c0.383,0.223,0.685-0.29,0.997-0.504c2.789-1.911,5.748-3.217,9.222-2.363c4.063,1,6.773,3.436,7.794,7.593     c0.631,2.57,0.662,5.129,0.022,7.706c-1.74,7.007-8.102,8.873-13.083,8.23c-5.892-0.76-8.861-4.622-10.281-9.997     C12.104,23.42,17.206,12.841,27.316,7.827c2.761-1.369,5.712-2.01,8.695-2.586c2.64,0,5.28,0,7.92,0     c2.873,0.5,5.75,0.985,8.487,2.044c6.413,2.481,10.806,7.079,13.832,13.14c2.128,4.262,3.086,8.822,3.378,13.515     c0.412,6.633-0.117,13.174-2.398,19.497c-2.996,8.304-7.887,15.3-14.417,21.2C42.67,83.803,30.792,89.897,17.997,94.378     c-1.471,0.515-2.962,0.974-4.416,1.531c-1.189,0.456-2.259,0.426-3.249-0.429C10.332,95.32,10.332,95.16,10.332,95z')\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil),\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$path,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$d('M77.208,19.527c0-3.447,2.512-5.966,5.955-5.973     c3.488-0.007,6.054,2.52,6.103,6.01c0.046,3.344-2.747,6.091-6.137,6.037C79.727,25.545,77.208,22.962,77.208,19.527z')\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil),\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$path,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$d('M83.211,52.127c-3.456,0.002-5.987-2.504-6.003-5.943     c-0.016-3.429,2.528-6.059,5.908-6.106c3.311-0.046,6.149,2.774,6.141,6.099C89.248,49.565,86.647,52.125,83.211,52.127z')\n\t\t\t\t\t]),\n\t\t\t\t_List_Nil)\n\t\t\t]))\n\t]);\nvar author$project$TrebleClef$trebleClef = _List_fromArray(\n\t[\n\t\tA2(\n\t\telm$svg$Svg$path,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$transform('scale(0.6)'),\n\t\t\t\telm$svg$Svg$Attributes$d('M25.5 49c0.305 3.1263-2.019 5.6563-4.0772 7.7014-0.9349 0.897-0.155 0.148-0.6437 0.594-0.1022-0.479-0.2986-1.731-0.2802-2.11 0.1304-2.6939 2.3198-6.5875 4.2381-8.0236 0.309 0.5767 0.563 0.6231 0.763 1.8382zm0.651 16.142c-1.232-0.906-2.85-1.144-4.3336-0.885-0.1913-1.255-0.3827-2.51-0.574-3.764 2.3506-2.329 4.9066-5.0322 5.0406-8.5394 0.059-2.232-0.276-4.6714-1.678-6.4836-1.7004 0.12823-2.8995 2.156-3.8019 3.4165-1.4889 2.6705-1.1414 5.9169-0.57 8.7965-0.8094 0.952-1.9296 1.743-2.7274 2.734-2.3561 2.308-4.4085 5.43-4.0046 8.878 0.18332 3.334 2.5894 6.434 5.8702 7.227 1.2457 0.315 2.5639 0.346 3.8241 0.099 0.2199 2.25 1.0266 4.629 0.0925 6.813-0.7007 1.598-2.7875 3.004-4.3325 2.192-0.5994-0.316-0.1137-0.051-0.478-0.252 1.0698-0.257 1.9996-1.036 2.26-1.565 0.8378-1.464-0.3998-3.639-2.1554-3.358-2.262 0.046-3.1904 3.14-1.7356 4.685 1.3468 1.52 3.833 1.312 5.4301 0.318 1.8125-1.18 2.0395-3.544 1.8325-5.562-0.07-0.678-0.403-2.67-0.444-3.387 0.697-0.249 0.209-0.059 1.193-0.449 2.66-1.053 4.357-4.259 3.594-7.122-0.318-1.469-1.044-2.914-2.302-3.792zm0.561 5.757c0.214 1.991-1.053 4.321-3.079 4.96-0.136-0.795-0.172-1.011-0.2626-1.475-0.4822-2.46-0.744-4.987-1.116-7.481 1.6246-0.168 3.4576 0.543 4.0226 2.184 0.244 0.577 0.343 1.197 0.435 1.812zm-5.1486 5.196c-2.5441 0.141-4.9995-1.595-5.6343-4.081-0.749-2.153-0.5283-4.63 0.8207-6.504 1.1151-1.702 2.6065-3.105 4.0286-4.543 0.183 1.127 0.366 2.254 0.549 3.382-2.9906 0.782-5.0046 4.725-3.215 7.451 0.5324 0.764 1.9765 2.223 2.7655 1.634-1.102-0.683-2.0033-1.859-1.8095-3.227-0.0821-1.282 1.3699-2.911 2.6513-3.198 0.4384 2.869 0.9413 6.073 1.3797 8.943-0.5054 0.1-1.0211 0.143-1.536 0.143z')\n\t\t\t]),\n\t\t_List_Nil)\n\t]);\nvar author$project$View$baseForOctave = function (_n0) {\n\tvar index = _n0.a;\n\tswitch (index) {\n\t\tcase 0:\n\t\t\treturn 92;\n\t\tcase 1:\n\t\t\treturn 78;\n\t\tcase 2:\n\t\t\treturn 64;\n\t\tcase 3:\n\t\t\treturn 50;\n\t\tcase 4:\n\t\t\treturn 36;\n\t\tcase 5:\n\t\t\treturn 22;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n};\nvar author$project$View$baseLines = _List_fromArray(\n\t[54, 58, 62, 66, 70]);\nvar author$project$View$trebleLines = _List_fromArray(\n\t[30, 34, 38, 42, 46]);\nvar elm$core$Basics$modBy = _Basics_modBy;\nvar elm$core$Basics$neq = _Utils_notEqual;\nvar elm$core$List$any = F2(\n\tfunction (isOkay, list) {\n\t\tany:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tif (isOkay(x)) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$isOkay = isOkay,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tisOkay = $temp$isOkay;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue any;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar elm$core$List$member = F2(\n\tfunction (x, xs) {\n\t\treturn A2(\n\t\t\telm$core$List$any,\n\t\t\tfunction (a) {\n\t\t\t\treturn _Utils_eq(a, x);\n\t\t\t},\n\t\t\txs);\n\t});\nvar elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');\nvar author$project$View$drawLedger = function (ypos) {\n\tvar odd = A2(elm$core$Basics$modBy, 4, ypos);\n\tvar n = elm$core$Basics$round(\n\t\t(ypos < 30) ? ((30 - ypos) / 4) : ((ypos > 70) ? ((ypos - 70) / 4) : ((ypos === 50) ? 1.0 : 0.0)));\n\tvar direction = (ypos > 50) ? elm$core$Basics$sub : elm$core$Basics$add;\n\tvar y = function () {\n\t\tif (odd) {\n\t\t\treturn ypos;\n\t\t} else {\n\t\t\treturn A2(direction, ypos, 2);\n\t\t}\n\t}();\n\treturn A3(\n\t\telm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (n_, _n0) {\n\t\t\t\tvar lines = _n0.a;\n\t\t\t\tvar y_ = _n0.b;\n\t\t\t\tvar yStr = elm$core$String$fromInt(y_);\n\t\t\t\tvar n2 = n_ * 2;\n\t\t\t\tvar to = elm$core$String$fromInt(55 + n2);\n\t\t\t\tvar from = elm$core$String$fromInt(45 - n2);\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tlines,\n\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\tvar _n1 = A2(\n\t\t\t\t\t\t\t\telm$core$List$member,\n\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t_Utils_ap(author$project$View$baseLines, author$project$View$trebleLines));\n\t\t\t\t\t\t\tif (_n1) {\n\t\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$path,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$strokeWidth('0.2'),\n\t\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$stroke('black'),\n\t\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$d('M ' + (from + (' ' + (yStr + (' L ' + (to + (' ' + yStr)))))))\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}()),\n\t\t\t\t\tA2(direction, y_, 4));\n\t\t\t}),\n\t\t_Utils_Tuple2(_List_Nil, y),\n\t\tA2(elm$core$List$range, 0, n)).a;\n};\nvar author$project$View$noteOffset = function (_n0) {\n\tvar note = _n0.b;\n\tswitch (note) {\n\t\tcase 'C':\n\t\t\treturn 0;\n\t\tcase 'D':\n\t\t\treturn -2;\n\t\tcase 'E':\n\t\t\treturn -4;\n\t\tcase 'F':\n\t\t\treturn -6;\n\t\tcase 'G':\n\t\t\treturn -8;\n\t\tcase 'A':\n\t\t\treturn -10;\n\t\tcase 'B':\n\t\t\treturn -12;\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n};\nvar elm$core$Maybe$andThen = F2(\n\tfunction (callback, maybeValue) {\n\t\tif (!maybeValue.$) {\n\t\t\tvar value = maybeValue.a;\n\t\t\treturn callback(value);\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$Maybe$map = F2(\n\tfunction (f, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn elm$core$Maybe$Just(\n\t\t\t\tf(value));\n\t\t} else {\n\t\t\treturn elm$core$Maybe$Nothing;\n\t\t}\n\t});\nvar elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar elm_community$list_extra$List$Extra$find = F2(\n\tfunction (predicate, list) {\n\t\tfind:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar first = list.a;\n\t\t\t\tvar rest = list.b;\n\t\t\t\tif (predicate(first)) {\n\t\t\t\t\treturn elm$core$Maybe$Just(first);\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$predicate = predicate,\n\t\t\t\t\t\t$temp$list = rest;\n\t\t\t\t\tpredicate = $temp$predicate;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue find;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar author$project$View$showHint = F2(\n\tfunction (_n0, _n1) {\n\t\tvar octave = _n0.a;\n\t\tvar note = _n0.b;\n\t\tvar octaves = _n1.J;\n\t\treturn A2(\n\t\t\telm$core$Maybe$withDefault,\n\t\t\tfalse,\n\t\t\tA2(\n\t\t\t\telm$core$Maybe$map,\n\t\t\t\tfunction (n) {\n\t\t\t\t\treturn (n.as + n.W) <= 5;\n\t\t\t\t},\n\t\t\t\tA2(\n\t\t\t\t\telm$core$Maybe$andThen,\n\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm_community$list_extra$List$Extra$find,\n\t\t\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\t\t\treturn _Utils_eq(n.aD, note);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\to.Z);\n\t\t\t\t\t},\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm_community$list_extra$List$Extra$find,\n\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\treturn _Utils_eq(o.aE, octave);\n\t\t\t\t\t\t},\n\t\t\t\t\t\toctaves))));\n\t});\nvar elm$svg$Svg$circle = elm$svg$Svg$trustedNode('circle');\nvar elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar elm$svg$Svg$text = elm$virtual_dom$VirtualDom$text;\nvar elm$svg$Svg$text_ = elm$svg$Svg$trustedNode('text');\nvar elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');\nvar elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');\nvar elm$svg$Svg$Attributes$dx = _VirtualDom_attribute('dx');\nvar elm$svg$Svg$Attributes$dy = _VirtualDom_attribute('dy');\nvar elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar elm$svg$Svg$Attributes$fontSize = _VirtualDom_attribute('font-size');\nvar elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');\nvar elm$svg$Svg$Attributes$textAnchor = _VirtualDom_attribute('text-anchor');\nvar elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar author$project$View$currentNote = function (model) {\n\tvar offset = author$project$View$noteOffset(model.H);\n\tvar hint = A2(author$project$View$showHint, model.H, model.aJ);\n\tvar base = author$project$View$baseForOctave(model.H);\n\tvar ypos = base + offset;\n\tvar note = _List_fromArray(\n\t\t[\n\t\t\tA2(\n\t\t\telm$svg$Svg$circle,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$svg$Svg$Attributes$cx('50'),\n\t\t\t\t\telm$svg$Svg$Attributes$cy(\n\t\t\t\t\telm$core$String$fromInt(ypos)),\n\t\t\t\t\telm$svg$Svg$Attributes$r('1.5'),\n\t\t\t\t\telm$svg$Svg$Attributes$stroke('black'),\n\t\t\t\t\telm$svg$Svg$Attributes$fill('black')\n\t\t\t\t]),\n\t\t\t_List_Nil)\n\t\t]);\n\tvar _n0 = model.H;\n\tvar noteTxt = _n0.b;\n\tvar hintNode = function () {\n\t\tif (hint) {\n\t\t\treturn _List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$svg$Svg$text_,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$x('50'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$y(\n\t\t\t\t\t\t\telm$core$String$fromInt(ypos)),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$textAnchor('middle'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$stroke('#fff'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$strokeWidth('0'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$dy('1'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$dx('0'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$fontSize('3px'),\n\t\t\t\t\t\t\telm$svg$Svg$Attributes$fill('#fff')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$svg$Svg$text(noteTxt)\n\t\t\t\t\t\t]))\n\t\t\t\t]);\n\t\t} else {\n\t\t\treturn _List_Nil;\n\t\t}\n\t}();\n\treturn _Utils_ap(\n\t\tauthor$project$View$drawLedger(ypos),\n\t\t_Utils_ap(note, hintNode));\n};\nvar author$project$Actions$Guess = function (a) {\n\treturn {$: 3, a: a};\n};\nvar elm$core$List$append = F2(\n\tfunction (xs, ys) {\n\t\tif (!ys.b) {\n\t\t\treturn xs;\n\t\t} else {\n\t\t\treturn A3(elm$core$List$foldr, elm$core$List$cons, ys, xs);\n\t\t}\n\t});\nvar elm$core$List$concat = function (lists) {\n\treturn A3(elm$core$List$foldr, elm$core$List$append, _List_Nil, lists);\n};\nvar elm$core$List$concatMap = F2(\n\tfunction (f, list) {\n\t\treturn elm$core$List$concat(\n\t\t\tA2(elm$core$List$map, f, list));\n\t});\nvar elm$html$Html$table = _VirtualDom_node('table');\nvar elm$html$Html$td = _VirtualDom_node('td');\nvar elm$html$Html$text = elm$virtual_dom$VirtualDom$text;\nvar elm$html$Html$tr = _VirtualDom_node('tr');\nvar elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\telm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2(elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar elm$core$Tuple$second = function (_n0) {\n\tvar y = _n0.b;\n\treturn y;\n};\nvar elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\telm$json$Json$Encode$string(string));\n\t});\nvar elm$html$Html$Attributes$class = elm$html$Html$Attributes$stringProperty('className');\nvar elm$html$Html$Attributes$classList = function (classes) {\n\treturn elm$html$Html$Attributes$class(\n\t\tA2(\n\t\t\telm$core$String$join,\n\t\t\t' ',\n\t\t\tA2(\n\t\t\t\telm$core$List$map,\n\t\t\t\telm$core$Tuple$first,\n\t\t\t\tA2(elm$core$List$filter, elm$core$Tuple$second, classes))));\n};\nvar elm$html$Html$Attributes$colspan = function (n) {\n\treturn A2(\n\t\t_VirtualDom_attribute,\n\t\t'colspan',\n\t\telm$core$String$fromInt(n));\n};\nvar elm$virtual_dom$VirtualDom$style = _VirtualDom_style;\nvar elm$html$Html$Attributes$style = elm$virtual_dom$VirtualDom$style;\nvar elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\telm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\telm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\telm$html$Html$Events$on,\n\t\t'click',\n\t\telm$json$Json$Decode$succeed(msg));\n};\nvar elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');\nvar author$project$View$answer = function (model) {\n\tvar rightFilled = function (c) {\n\t\treturn A2(\n\t\t\telm$core$List$member,\n\t\t\tc,\n\t\t\t_List_fromArray(\n\t\t\t\t['C', 'D', 'F', 'G', 'A']));\n\t};\n\tvar notes = _List_fromArray(\n\t\t['C', 'D', 'E', 'F', 'G', 'A', 'B']);\n\tvar leftFilled = function (c) {\n\t\treturn A2(\n\t\t\telm$core$List$member,\n\t\t\tc,\n\t\t\t_List_fromArray(\n\t\t\t\t['D', 'E', 'G', 'A', 'B']));\n\t};\n\tvar _n0 = model.H;\n\tvar note = _n0.b;\n\treturn A2(\n\t\telm$html$Html$table,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('answer')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$tr,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('blacks')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$concatMap,\n\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\tvar guess = elm$html$Html$Events$onClick(\n\t\t\t\t\t\t\tauthor$project$Actions$Guess(c));\n\t\t\t\t\t\tvar correctOrIncorrect = _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t'incorrect',\n\t\t\t\t\t\t\t\t(model.P === 2) && _Utils_eq(\n\t\t\t\t\t\t\t\t\telm$core$Maybe$Just(c),\n\t\t\t\t\t\t\t\t\tmodel.aA))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$td,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'filled',\n\t\t\t\t\t\t\t\t\t\t\t\t\tleftFilled(c))\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\tcorrectOrIncorrect)),\n\t\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'width', '2.041%'),\n\t\t\t\t\t\t\t\t\t\tguess\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$td,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$classList(correctOrIncorrect),\n\t\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'width', '10.204%'),\n\t\t\t\t\t\t\t\t\t\tguess\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$td,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2('right', true),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t'filled',\n\t\t\t\t\t\t\t\t\t\t\t\t\trightFilled(c))\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\tcorrectOrIncorrect)),\n\t\t\t\t\t\t\t\t\t\tA2(elm$html$Html$Attributes$style, 'width', '2.041%'),\n\t\t\t\t\t\t\t\t\t\tguess\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t},\n\t\t\t\t\tnotes)),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$tr,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('whites')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (c) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$td,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\tauthor$project$Actions$Guess(c)),\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$colspan(3),\n\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t'incorrect',\n\t\t\t\t\t\t\t\t\t\t\t(model.P === 2) && _Utils_eq(\n\t\t\t\t\t\t\t\t\t\t\t\telm$core$Maybe$Just(c),\n\t\t\t\t\t\t\t\t\t\t\t\tmodel.aA))\n\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text(c)\n\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t},\n\t\t\t\t\tnotes))\n\t\t\t]));\n};\nvar elm$core$String$fromFloat = _String_fromNumber;\nvar elm$html$Html$div = _VirtualDom_node('div');\nvar author$project$View$countdown = function (model) {\n\tvar w = elm$core$String$fromFloat(\n\t\t(model.B / author$project$ViewModel$timeAllowed(model.aB)) * 100);\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('countdown'),\n\t\t\t\tA2(elm$html$Html$Attributes$style, 'width', w + '%')\n\t\t\t]),\n\t\t_List_Nil);\n};\nvar author$project$Actions$ToggleStats = {$: 6};\nvar author$project$View$toPercent = function (n) {\n\treturn elm$core$String$fromInt(n) + '%';\n};\nvar author$project$ViewModel$totalsForOctave = F2(\n\tfunction (octave, agg) {\n\t\treturn A3(\n\t\t\telm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (n, _n0) {\n\t\t\t\t\tvar c = _n0.a;\n\t\t\t\t\tvar i = _n0.b;\n\t\t\t\t\treturn _Utils_Tuple2(c + n.as, i + n.W);\n\t\t\t\t}),\n\t\t\tagg,\n\t\t\toctave.Z);\n\t});\nvar author$project$ViewModel$percentage = function (stats) {\n\tvar answers = A3(\n\t\telm$core$List$foldl,\n\t\tauthor$project$ViewModel$totalsForOctave,\n\t\t_Utils_Tuple2(0, 0),\n\t\tstats.J);\n\tif ((!answers.a) && (!answers.b)) {\n\t\treturn 0;\n\t} else {\n\t\tvar correct = answers.a;\n\t\tvar incorrect = answers.b;\n\t\tvar fIncorrect = incorrect;\n\t\tvar fCorrect = correct;\n\t\treturn elm$core$Basics$round((fCorrect / (fCorrect + fIncorrect)) * 100);\n\t}\n};\nvar elm$html$Html$span = _VirtualDom_node('span');\nvar author$project$View$summary = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('summary')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$span,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('score'),\n\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Actions$ToggleStats)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\tauthor$project$View$toPercent(\n\t\t\t\t\t\t\tauthor$project$ViewModel$percentage(model.aJ)))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$span,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('msg')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$html$Html$text(model.aN)\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$View$footer = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('footer')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tauthor$project$View$countdown(model),\n\t\t\t\tauthor$project$View$answer(model),\n\t\t\t\tauthor$project$View$summary(model)\n\t\t\t]));\n};\nvar author$project$Actions$ToggleStatus = {$: 8};\nvar author$project$Actions$SetMode = function (a) {\n\treturn {$: 2, a: a};\n};\nvar elm$html$Html$button = _VirtualDom_node('button');\nvar author$project$View$modeButton = F5(\n\tfunction (model, mode, txt, sub, cls) {\n\t\treturn A2(\n\t\t\telm$html$Html$button,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$svg$Svg$Attributes$class(cls),\n\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t'active',\n\t\t\t\t\t\t\t_Utils_eq(model.aB, mode))\n\t\t\t\t\t\t])),\n\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\tauthor$project$Actions$SetMode(mode))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$span,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text(txt)\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\telm$html$Html$span,\n\t\t\t\t\t_List_Nil,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\telm$html$Html$text(sub)\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar author$project$ViewModel$Hard = 2;\nvar author$project$ViewModel$Medium = 1;\nvar elm$html$Html$i = _VirtualDom_node('i');\nvar author$project$View$modeSelector = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('mode-selector')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA5(author$project$View$modeButton, model, 0, 'Easy', 'two octaves', 'easy'),\n\t\t\t\tA5(author$project$View$modeButton, model, 1, 'Medium', 'four octaves', 'medium'),\n\t\t\t\tA5(author$project$View$modeButton, model, 2, 'Hard', 'all octaves', 'hard'),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$button,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('play-pause'),\n\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Actions$ToggleStatus)\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\telm$html$Html$i,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2('fa', true),\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2('fa-play', model.aL === 1),\n\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2('fa-pause', !model.aL)\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar author$project$Actions$ShowOctave = function (a) {\n\treturn {$: 7, a: a};\n};\nvar author$project$View$stats = function (model) {\n\tvar notes = A2(\n\t\telm$core$Maybe$withDefault,\n\t\t_List_Nil,\n\t\tA2(\n\t\t\telm$core$Maybe$map,\n\t\t\tfunction ($) {\n\t\t\t\treturn $.Z;\n\t\t\t},\n\t\t\tA2(\n\t\t\t\telm_community$list_extra$List$Extra$find,\n\t\t\t\tfunction (o) {\n\t\t\t\t\treturn _Utils_eq(o.aE, model.aK);\n\t\t\t\t},\n\t\t\t\tmodel.aJ.J)));\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('stats')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('header')\n\t\t\t\t\t]),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tA2(\n\t\t\t\t\t\telm$core$List$map,\n\t\t\t\t\t\tfunction (o) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\t\t\t\t\t'active',\n\t\t\t\t\t\t\t\t\t\t\t\t_Utils_eq(model.aK, o.aE))\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(\n\t\t\t\t\t\t\t\t\t\tauthor$project$Actions$ShowOctave(o.aE))\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\telm$core$String$fromInt(o.aE))\n\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmodel.aJ.J),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$Events$onClick(author$project$Actions$ToggleStats)\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$html$Html$text('<=')\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t]))),\n\t\t\t\tA2(\n\t\t\t\telm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$class('notes')\n\t\t\t\t\t]),\n\t\t\t\tA2(\n\t\t\t\t\telm$core$List$map,\n\t\t\t\t\tfunction (n) {\n\t\t\t\t\t\tvar noteDivs = _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$class('note-name')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\telm$html$Html$text(n.aD)\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\tvar incorrect = n.W;\n\t\t\t\t\t\tvar correct = n.as;\n\t\t\t\t\t\tvar total = correct + incorrect;\n\t\t\t\t\t\tvar _n0 = function () {\n\t\t\t\t\t\t\tvar _n1 = !total;\n\t\t\t\t\t\t\tif (_n1) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(40, 40);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2((correct / total) * 80, (incorrect / total) * 80);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t\tvar pc = _n0.a;\n\t\t\t\t\t\tvar pi = _n0.b;\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$class('note')\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\tnoteDivs,\n\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tvar _n2 = pc > 0;\n\t\t\t\t\t\t\t\t\t\tif (!_n2) {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$class('note-correct'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$String$fromFloat(pc) + '%')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}(),\n\t\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t\tvar _n3 = pi > 0;\n\t\t\t\t\t\t\t\t\t\tif (!_n3) {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_Nil;\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$div,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$svg$Svg$Attributes$class('note-incorrect'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$html$Html$Attributes$style,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'width',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telm$core$String$fromFloat(pi) + '%')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}())));\n\t\t\t\t\t},\n\t\t\t\t\tnotes))\n\t\t\t]));\n};\nvar author$project$View$overlay = function (model) {\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$html$Html$Attributes$classList(\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t_Utils_Tuple2('overlay', true),\n\t\t\t\t\t\t_Utils_Tuple2('active', model.ak)\n\t\t\t\t\t]))\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tauthor$project$View$stats(model)\n\t\t\t]));\n};\nvar author$project$View$stave = A2(\n\telm$core$List$map,\n\tfunction (n) {\n\t\treturn A2(\n\t\t\telm$svg$Svg$path,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\telm$svg$Svg$Attributes$strokeWidth('0.2'),\n\t\t\t\t\telm$svg$Svg$Attributes$stroke('black'),\n\t\t\t\t\telm$svg$Svg$Attributes$d('M 5 ' + (n + (' L 95 ' + n)))\n\t\t\t\t]),\n\t\t\t_List_Nil);\n\t},\n\tA2(\n\t\telm$core$List$map,\n\t\telm$core$String$fromInt,\n\t\t_Utils_ap(author$project$View$trebleLines, author$project$View$baseLines)));\nvar elm$svg$Svg$svg = elm$svg$Svg$trustedNode('svg');\nvar elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar author$project$View$view = function (model) {\n\tvar _n0 = model.aT;\n\tvar w = _n0.a;\n\tvar h = _n0.b;\n\treturn A2(\n\t\telm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\telm$svg$Svg$Attributes$class('stage')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tauthor$project$View$footer(model),\n\t\t\t\tauthor$project$View$overlay(model),\n\t\t\t\tauthor$project$View$modeSelector(model),\n\t\t\t\tA2(\n\t\t\t\telm$svg$Svg$svg,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\telm$svg$Svg$Attributes$width('100%'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$height('100%'),\n\t\t\t\t\t\telm$svg$Svg$Attributes$viewBox('0 0 100 95')\n\t\t\t\t\t]),\n\t\t\t\t_Utils_ap(\n\t\t\t\t\tauthor$project$TrebleClef$baseClef,\n\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\tauthor$project$TrebleClef$trebleClef,\n\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\tauthor$project$View$stave,\n\t\t\t\t\t\t\tauthor$project$View$currentNote(model)))))\n\t\t\t]));\n};\nvar elm$browser$Browser$element = _Browser_element;\nvar author$project$Main$main = elm$browser$Browser$element(\n\t{\n\t\taz: function (_n0) {\n\t\t\treturn author$project$Main$init;\n\t\t},\n\t\taM: author$project$Main$subscriptions,\n\t\taP: author$project$Update$update,\n\t\taR: author$project$View$view\n\t});\n_Platform_export({'Main':{'init':author$project$Main$main(\n\telm$json$Json$Decode$succeed(0))(0)}});}(this));"],"sourceRoot":""}